/*
 * This is a generated file. 
 * If there are content placeholders, only edit content inside content placeholders.
 * If there are no content placeholders, do not edit this file directly.
 */
namespace Microsoft.ExcelServices
{
	using System;
	/* Begin_PlaceHolder_UsingHeader */
	/* End_PlaceHolder_UsingHeader */

	/* Begin_PlaceHolder_Header */
	/* End_PlaceHolder_Header */
	public class Range: OfficeExtension.ClientObject
	{
		private string m_address;
		private string m_addressLocal;
		private int m_cellCount;
		private int m_columnCount;
		private bool m_columnHidden;
		private int m_columnIndex;
		private Microsoft.ExcelServices.RangeFormat m_format;
		private object[][] m_formulas;
		private object[][] m_formulasLocal;
		private object[][] m_formulasR1C1;
		private bool m_hidden;
		private object[][] m_numberFormat;
		private int m_rowCount;
		private bool m_rowHidden;
		private int m_rowIndex;
		private Microsoft.ExcelServices.RangeSort m_sort;
		private object[][] m_text;
		private string[][] m_valueTypes;
		private object[][] m_values;
		private Microsoft.ExcelServices.Worksheet m_worksheet;
		private string m__ReferenceId;

		/* Begin_PlaceHolder_Range_Custom_Members */
		/* End_PlaceHolder_Range_Custom_Members */
		public Range(OfficeExtension.ClientRequestContext context, OfficeExtension.ObjectPath objectPath)
			: base(context, objectPath)
		{
		}
		
		
		public Microsoft.ExcelServices.RangeFormat Format
		{
			get
			{
				if (this.m_format == null)
				{
					this.m_format = new Microsoft.ExcelServices.RangeFormat(this.Context, OfficeExtension.ObjectPathFactory._CreatePropertyObjectPath(this.Context, this, "Format", false /*isCollection*/, false /*isInvalidAfterRequest*/));	
				}
		
				return this.m_format;
			}
		}
		
		public Microsoft.ExcelServices.RangeSort Sort
		{
			get
			{
				if (this.m_sort == null)
				{
					this.m_sort = new Microsoft.ExcelServices.RangeSort(this.Context, OfficeExtension.ObjectPathFactory._CreatePropertyObjectPath(this.Context, this, "Sort", false /*isCollection*/, false /*isInvalidAfterRequest*/));	
				}
		
				return this.m_sort;
			}
		}
		
		public Microsoft.ExcelServices.Worksheet Worksheet
		{
			get
			{
				if (this.m_worksheet == null)
				{
					this.m_worksheet = new Microsoft.ExcelServices.Worksheet(this.Context, OfficeExtension.ObjectPathFactory._CreatePropertyObjectPath(this.Context, this, "Worksheet", false /*isCollection*/, false /*isInvalidAfterRequest*/));	
				}
		
				return this.m_worksheet;
			}
		}

		public string Address
		{
			get
			{
				OfficeExtension.Utility._ThrowIfNotLoaded("address", this.m_address);
				return this.m_address;
			}
		}

		public string AddressLocal
		{
			get
			{
				OfficeExtension.Utility._ThrowIfNotLoaded("addressLocal", this.m_addressLocal);
				return this.m_addressLocal;
			}
		}

		public int CellCount
		{
			get
			{
				OfficeExtension.Utility._ThrowIfNotLoaded("cellCount", this.m_cellCount);
				return this.m_cellCount;
			}
		}

		public int ColumnCount
		{
			get
			{
				OfficeExtension.Utility._ThrowIfNotLoaded("columnCount", this.m_columnCount);
				return this.m_columnCount;
			}
		}

		public bool ColumnHidden
		{
			get
			{
				OfficeExtension.Utility._ThrowIfNotLoaded("columnHidden", this.m_columnHidden);
				return this.m_columnHidden;
			}

			set
			{
				this.m_columnHidden = value;
				OfficeExtension.ActionFactory._CreateSetPropertyAction(this.Context, this, "ColumnHidden", value);
			}
		}

		public int ColumnIndex
		{
			get
			{
				OfficeExtension.Utility._ThrowIfNotLoaded("columnIndex", this.m_columnIndex);
				return this.m_columnIndex;
			}
		}

		public object[][] Formulas
		{
			get
			{
				OfficeExtension.Utility._ThrowIfNotLoaded("formulas", this.m_formulas);
				return this.m_formulas;
			}

			set
			{
				this.m_formulas = value;
				OfficeExtension.ActionFactory._CreateSetPropertyAction(this.Context, this, "Formulas", value);
			}
		}

		public object[][] FormulasLocal
		{
			get
			{
				OfficeExtension.Utility._ThrowIfNotLoaded("formulasLocal", this.m_formulasLocal);
				return this.m_formulasLocal;
			}

			set
			{
				this.m_formulasLocal = value;
				OfficeExtension.ActionFactory._CreateSetPropertyAction(this.Context, this, "FormulasLocal", value);
			}
		}

		public object[][] FormulasR1C1
		{
			get
			{
				OfficeExtension.Utility._ThrowIfNotLoaded("formulasR1C1", this.m_formulasR1C1);
				return this.m_formulasR1C1;
			}

			set
			{
				this.m_formulasR1C1 = value;
				OfficeExtension.ActionFactory._CreateSetPropertyAction(this.Context, this, "FormulasR1C1", value);
			}
		}

		public bool Hidden
		{
			get
			{
				OfficeExtension.Utility._ThrowIfNotLoaded("hidden", this.m_hidden);
				return this.m_hidden;
			}
		}

		public object[][] NumberFormat
		{
			get
			{
				OfficeExtension.Utility._ThrowIfNotLoaded("numberFormat", this.m_numberFormat);
				return this.m_numberFormat;
			}

			set
			{
				this.m_numberFormat = value;
				OfficeExtension.ActionFactory._CreateSetPropertyAction(this.Context, this, "NumberFormat", value);
			}
		}

		public int RowCount
		{
			get
			{
				OfficeExtension.Utility._ThrowIfNotLoaded("rowCount", this.m_rowCount);
				return this.m_rowCount;
			}
		}

		public bool RowHidden
		{
			get
			{
				OfficeExtension.Utility._ThrowIfNotLoaded("rowHidden", this.m_rowHidden);
				return this.m_rowHidden;
			}

			set
			{
				this.m_rowHidden = value;
				OfficeExtension.ActionFactory._CreateSetPropertyAction(this.Context, this, "RowHidden", value);
			}
		}

		public int RowIndex
		{
			get
			{
				OfficeExtension.Utility._ThrowIfNotLoaded("rowIndex", this.m_rowIndex);
				return this.m_rowIndex;
			}
		}

		public object[][] Text
		{
			get
			{
				OfficeExtension.Utility._ThrowIfNotLoaded("text", this.m_text);
				return this.m_text;
			}
		}

		public string[][] ValueTypes
		{
			get
			{
				OfficeExtension.Utility._ThrowIfNotLoaded("valueTypes", this.m_valueTypes);
				return this.m_valueTypes;
			}
		}

		public object[][] Values
		{
			get
			{
				OfficeExtension.Utility._ThrowIfNotLoaded("values", this.m_values);
				return this.m_values;
			}

			set
			{
				this.m_values = value;
				OfficeExtension.ActionFactory._CreateSetPropertyAction(this.Context, this, "Values", value);
			}
		}

		public string _ReferenceId
		{
			get
			{
				OfficeExtension.Utility._ThrowIfNotLoaded("_ReferenceId", this.m__ReferenceId);
				return this.m__ReferenceId;
			}
		}

		public void Clear(string applyTo)
		{
			/* Begin_PlaceHolder_Range_Clear */
			/* End_PlaceHolder_Range_Clear */
			OfficeExtension.ActionFactory._CreateMethodAction(this.Context, this, "Clear", OfficeExtension.OperationType.Default, new object[] {applyTo});
		}

		public void Delete(string shift)
		{
			/* Begin_PlaceHolder_Range_Delete */
			/* End_PlaceHolder_Range_Delete */
			OfficeExtension.ActionFactory._CreateMethodAction(this.Context, this, "Delete", OfficeExtension.OperationType.Default, new object[] {shift});
		}

		public Microsoft.ExcelServices.Range GetBoundingRect(object anotherRange)
		{
			/* Begin_PlaceHolder_Range_GetBoundingRect */
			/* End_PlaceHolder_Range_GetBoundingRect */
			return new Microsoft.ExcelServices.Range(this.Context, OfficeExtension.ObjectPathFactory._CreateMethodObjectPath(this.Context, this, "GetBoundingRect", OfficeExtension.OperationType.Read, new object[] {anotherRange}, false /*isCollection*/, true /*isInvalidAfterRequest*/));
		}

		public Microsoft.ExcelServices.Range GetCell(int row, int column)
		{
			/* Begin_PlaceHolder_Range_GetCell */
			/* End_PlaceHolder_Range_GetCell */
			return new Microsoft.ExcelServices.Range(this.Context, OfficeExtension.ObjectPathFactory._CreateMethodObjectPath(this.Context, this, "GetCell", OfficeExtension.OperationType.Read, new object[] {row, column}, false /*isCollection*/, true /*isInvalidAfterRequest*/));
		}

		public Microsoft.ExcelServices.Range GetColumn(int column)
		{
			/* Begin_PlaceHolder_Range_GetColumn */
			/* End_PlaceHolder_Range_GetColumn */
			return new Microsoft.ExcelServices.Range(this.Context, OfficeExtension.ObjectPathFactory._CreateMethodObjectPath(this.Context, this, "GetColumn", OfficeExtension.OperationType.Read, new object[] {column}, false /*isCollection*/, true /*isInvalidAfterRequest*/));
		}

		public Microsoft.ExcelServices.Range GetEntireColumn()
		{
			/* Begin_PlaceHolder_Range_GetEntireColumn */
			/* End_PlaceHolder_Range_GetEntireColumn */
			return new Microsoft.ExcelServices.Range(this.Context, OfficeExtension.ObjectPathFactory._CreateMethodObjectPath(this.Context, this, "GetEntireColumn", OfficeExtension.OperationType.Read, new object[] {}, false /*isCollection*/, true /*isInvalidAfterRequest*/));
		}

		public Microsoft.ExcelServices.Range GetEntireRow()
		{
			/* Begin_PlaceHolder_Range_GetEntireRow */
			/* End_PlaceHolder_Range_GetEntireRow */
			return new Microsoft.ExcelServices.Range(this.Context, OfficeExtension.ObjectPathFactory._CreateMethodObjectPath(this.Context, this, "GetEntireRow", OfficeExtension.OperationType.Read, new object[] {}, false /*isCollection*/, true /*isInvalidAfterRequest*/));
		}

		public Microsoft.ExcelServices.Range GetIntersection(object anotherRange)
		{
			/* Begin_PlaceHolder_Range_GetIntersection */
			/* End_PlaceHolder_Range_GetIntersection */
			return new Microsoft.ExcelServices.Range(this.Context, OfficeExtension.ObjectPathFactory._CreateMethodObjectPath(this.Context, this, "GetIntersection", OfficeExtension.OperationType.Read, new object[] {anotherRange}, false /*isCollection*/, true /*isInvalidAfterRequest*/));
		}

		public Microsoft.ExcelServices.Range GetLastCell()
		{
			/* Begin_PlaceHolder_Range_GetLastCell */
			/* End_PlaceHolder_Range_GetLastCell */
			return new Microsoft.ExcelServices.Range(this.Context, OfficeExtension.ObjectPathFactory._CreateMethodObjectPath(this.Context, this, "GetLastCell", OfficeExtension.OperationType.Read, new object[] {}, false /*isCollection*/, true /*isInvalidAfterRequest*/));
		}

		public Microsoft.ExcelServices.Range GetLastColumn()
		{
			/* Begin_PlaceHolder_Range_GetLastColumn */
			/* End_PlaceHolder_Range_GetLastColumn */
			return new Microsoft.ExcelServices.Range(this.Context, OfficeExtension.ObjectPathFactory._CreateMethodObjectPath(this.Context, this, "GetLastColumn", OfficeExtension.OperationType.Read, new object[] {}, false /*isCollection*/, true /*isInvalidAfterRequest*/));
		}

		public Microsoft.ExcelServices.Range GetLastRow()
		{
			/* Begin_PlaceHolder_Range_GetLastRow */
			/* End_PlaceHolder_Range_GetLastRow */
			return new Microsoft.ExcelServices.Range(this.Context, OfficeExtension.ObjectPathFactory._CreateMethodObjectPath(this.Context, this, "GetLastRow", OfficeExtension.OperationType.Read, new object[] {}, false /*isCollection*/, true /*isInvalidAfterRequest*/));
		}

		public Microsoft.ExcelServices.Range GetOffsetRange(int rowOffset, int columnOffset)
		{
			/* Begin_PlaceHolder_Range_GetOffsetRange */
			/* End_PlaceHolder_Range_GetOffsetRange */
			return new Microsoft.ExcelServices.Range(this.Context, OfficeExtension.ObjectPathFactory._CreateMethodObjectPath(this.Context, this, "GetOffsetRange", OfficeExtension.OperationType.Read, new object[] {rowOffset, columnOffset}, false /*isCollection*/, true /*isInvalidAfterRequest*/));
		}

		public Microsoft.ExcelServices.Range GetRow(int row)
		{
			/* Begin_PlaceHolder_Range_GetRow */
			/* End_PlaceHolder_Range_GetRow */
			return new Microsoft.ExcelServices.Range(this.Context, OfficeExtension.ObjectPathFactory._CreateMethodObjectPath(this.Context, this, "GetRow", OfficeExtension.OperationType.Read, new object[] {row}, false /*isCollection*/, true /*isInvalidAfterRequest*/));
		}

		public Microsoft.ExcelServices.Range GetUsedRange(bool valuesOnly)
		{
			/* Begin_PlaceHolder_Range_GetUsedRange */
			/* End_PlaceHolder_Range_GetUsedRange */
			return new Microsoft.ExcelServices.Range(this.Context, OfficeExtension.ObjectPathFactory._CreateMethodObjectPath(this.Context, this, "GetUsedRange", OfficeExtension.OperationType.Read, new object[] {valuesOnly}, false /*isCollection*/, true /*isInvalidAfterRequest*/));
		}

		public Microsoft.ExcelServices.Range Insert(string shift)
		{
			/* Begin_PlaceHolder_Range_Insert */
			/* End_PlaceHolder_Range_Insert */
			return new Microsoft.ExcelServices.Range(this.Context, OfficeExtension.ObjectPathFactory._CreateMethodObjectPath(this.Context, this, "Insert", OfficeExtension.OperationType.Default, new object[] {shift}, false /*isCollection*/, true /*isInvalidAfterRequest*/));
		}

		public void Merge(bool across)
		{
			/* Begin_PlaceHolder_Range_Merge */
			/* End_PlaceHolder_Range_Merge */
			OfficeExtension.ActionFactory._CreateMethodAction(this.Context, this, "Merge", OfficeExtension.OperationType.Default, new object[] {across});
		}

		public void Select()
		{
			/* Begin_PlaceHolder_Range_Select */
			/* End_PlaceHolder_Range_Select */
			OfficeExtension.ActionFactory._CreateMethodAction(this.Context, this, "Select", OfficeExtension.OperationType.Read, new object[] {});
		}

		public void Unmerge()
		{
			/* Begin_PlaceHolder_Range_Unmerge */
			/* End_PlaceHolder_Range_Unmerge */
			OfficeExtension.ActionFactory._CreateMethodAction(this.Context, this, "Unmerge", OfficeExtension.OperationType.Default, new object[] {});
		}

		public void _KeepReference()
		{
			/* Begin_PlaceHolder_Range__KeepReference */
			/* End_PlaceHolder_Range__KeepReference */
			OfficeExtension.ActionFactory._CreateMethodAction(this.Context, this, "_KeepReference", OfficeExtension.OperationType.Read, new object[] {});
		}

			/** Handle results returned from the document
			 */
		public override void _HandleResult(Newtonsoft.Json.Linq.JToken value)
		{
			if (OfficeExtension.Utility._IsNullOrUndefined(value))
			{
				return;
			}
			Newtonsoft.Json.Linq.JObject obj = value as Newtonsoft.Json.Linq.JObject;
			if (obj == null)
			{
				return;
			}
		
			OfficeExtension.Utility._FixObjectPathIfNecessary(this, obj);
			if (!OfficeExtension.Utility._IsUndefined(obj["Address"]))
			{
				this.m_address = obj["Address"].ToObject<string>();
			}
		
			if (!OfficeExtension.Utility._IsUndefined(obj["AddressLocal"]))
			{
				this.m_addressLocal = obj["AddressLocal"].ToObject<string>();
			}
		
			if (!OfficeExtension.Utility._IsUndefined(obj["CellCount"]))
			{
				this.m_cellCount = obj["CellCount"].ToObject<int>();
			}
		
			if (!OfficeExtension.Utility._IsUndefined(obj["ColumnCount"]))
			{
				this.m_columnCount = obj["ColumnCount"].ToObject<int>();
			}
		
			if (!OfficeExtension.Utility._IsUndefined(obj["ColumnHidden"]))
			{
				this.m_columnHidden = obj["ColumnHidden"].ToObject<bool>();
			}
		
			if (!OfficeExtension.Utility._IsUndefined(obj["ColumnIndex"]))
			{
				this.m_columnIndex = obj["ColumnIndex"].ToObject<int>();
			}
		
			if (!OfficeExtension.Utility._IsUndefined(obj["Formulas"]))
			{
				this.m_formulas = obj["Formulas"].ToObject<object[][]>();
			}
		
			if (!OfficeExtension.Utility._IsUndefined(obj["FormulasLocal"]))
			{
				this.m_formulasLocal = obj["FormulasLocal"].ToObject<object[][]>();
			}
		
			if (!OfficeExtension.Utility._IsUndefined(obj["FormulasR1C1"]))
			{
				this.m_formulasR1C1 = obj["FormulasR1C1"].ToObject<object[][]>();
			}
		
			if (!OfficeExtension.Utility._IsUndefined(obj["Hidden"]))
			{
				this.m_hidden = obj["Hidden"].ToObject<bool>();
			}
		
			if (!OfficeExtension.Utility._IsUndefined(obj["NumberFormat"]))
			{
				this.m_numberFormat = obj["NumberFormat"].ToObject<object[][]>();
			}
		
			if (!OfficeExtension.Utility._IsUndefined(obj["RowCount"]))
			{
				this.m_rowCount = obj["RowCount"].ToObject<int>();
			}
		
			if (!OfficeExtension.Utility._IsUndefined(obj["RowHidden"]))
			{
				this.m_rowHidden = obj["RowHidden"].ToObject<bool>();
			}
		
			if (!OfficeExtension.Utility._IsUndefined(obj["RowIndex"]))
			{
				this.m_rowIndex = obj["RowIndex"].ToObject<int>();
			}
		
			if (!OfficeExtension.Utility._IsUndefined(obj["Text"]))
			{
				this.m_text = obj["Text"].ToObject<object[][]>();
			}
		
			if (!OfficeExtension.Utility._IsUndefined(obj["ValueTypes"]))
			{
				this.m_valueTypes = obj["ValueTypes"].ToObject<string[][]>();
			}
		
			if (!OfficeExtension.Utility._IsUndefined(obj["Values"]))
			{
				this.m_values = obj["Values"].ToObject<object[][]>();
			}
		
			if (!OfficeExtension.Utility._IsUndefined(obj["_ReferenceId"]))
			{
				this.m__ReferenceId = obj["_ReferenceId"].ToObject<string>();
			}
		
		    if (!OfficeExtension.Utility._IsUndefined(obj["Format"]))
			{
		        this.Format._HandleResult(obj["Format"]);
			}
		    if (!OfficeExtension.Utility._IsUndefined(obj["Sort"]))
			{
		        this.Sort._HandleResult(obj["Sort"]);
			}
		    if (!OfficeExtension.Utility._IsUndefined(obj["Worksheet"]))
			{
		        this.Worksheet._HandleResult(obj["Worksheet"]);
			}
		}
		
		/*
		 * Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading the properties.
		 */
		public Microsoft.ExcelServices.Range Load(OfficeExtension.LoadOption option) 
		{
			OfficeExtension.Utility._Load(this, option);
			return this;
		}
	}
}

